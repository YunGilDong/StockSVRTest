//------------------------------------------------------------------------------
// Include
//------------------------------------------------------------------------------
#pragma hdrstop
#include "CLSstockCL.h"
//------------------------------------------------------------------------------
// Global Varialble
//------------------------------------------------------------------------------
queue<int> PoolIndexQ;
//------------------------------------------------------------------------------
// CLSstockCL
//------------------------------------------------------------------------------
CLSstockCL::CLSstockCL(void)
{
	Init();
}
//------------------------------------------------------------------------------
// ~CLSstockCL
//------------------------------------------------------------------------------
CLSstockCL::~CLSstockCL(void)
{
}
//------------------------------------------------------------------------------
// CheckState
//------------------------------------------------------------------------------
bool CLSstockCL::CheckState(void)
{

}
//------------------------------------------------------------------------------
bool CLSstockCL::CheckState(int mode, bool state)
{

}
//------------------------------------------------------------------------------
// Delete
//------------------------------------------------------------------------------
void CLSstockCL::Delete(void)
{
	if (TcpIF != NULL)
	{
		TcpIF->Close();
		delete TcpIF;
		TcpIF = NULL;
	}
	if (Thread != NULL)
	{
		if (Thread->Active)
			Thread->Stop(true);
		delete Thread;
		Thread = NULL;
	}
	Active = false;
	PoolIndexQ.push(ID);	// Delete한 클라이언트 ID pool index로 사용
}
//------------------------------------------------------------------------------
// Init
//------------------------------------------------------------------------------
void CLSstockCL::Init(void)
{
	ID = -1;
	Socket = -1;
	TcpIF = NULL;
	Thread = NULL;
	Active = false;
}
//------------------------------------------------------------------------------
void CLSstockCL::Init(DB_STOCKCL *pInfo)
{
	ID = pInfo->id;
	Mng.id = pInfo->id;
	sprintf(Mng.address, "%s", pInfo->address);
	SetName("STOCKCL%d", ID);
	Socket = -1;
	TcpIF = NULL;
	Thread = NULL;
	InitState(pInfo);
	Active = false;
}
//------------------------------------------------------------------------------
// InitState
//------------------------------------------------------------------------------
void CLSstockCL::InitState(DB_STOCKCL *pInfo)
{
	//
}